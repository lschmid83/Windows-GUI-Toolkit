{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f32\froman\fcharset238\fprq2 Times New Roman CE;}{\f33\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f35\froman\fcharset161\fprq2 Times New Roman Greek;}{\f36\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f37\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f38\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f39\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f40\fswiss\fcharset238\fprq2 Arial CE;}{\f41\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f43\fswiss\fcharset161\fprq2 Arial Greek;}{\f44\fswiss\fcharset162\fprq2 Arial Tur;}{\f45\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f46\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f47\fswiss\fcharset186\fprq2 Arial Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 
Normal;}{\s1\ql \li0\ri0\keepn\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \b\fs24\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\keepn\widctlpar\nooverflow\faroman\rin0\lin0\itap0 
\b\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext0 heading 2;}{\s3\ql \li0\ri0\keepn\widctlpar\nooverflow\faroman\outlinelevel2\rin0\lin0\itap0 \f1\fs20\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext0 
heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs16 \additive \b \sbasedon10 Strong;}{\*\cs17 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}{
\s18\ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \b\f1\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext18 Body Text;}{\s19\ql \li0\ri0\widctlpar\tqc\tx4153\tqr\tx8306\nooverflow\faroman\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext19 footer;}{\*\cs20 \additive \sbasedon10 page number;}}{\info{\title XP Form Skin Component v1}{\author Unknown}{\operator Lawrence}{\creatim\yr2001\mo6\dy30\hr15\min48}
{\revtim\yr2001\mo7\dy8\hr15\min32}{\version24}{\edmins32}{\nofpages7}{\nofwords1503}{\nofchars8568}{\*\company n/a}{\nofcharsws0}{\vern8247}}
\widowctrl\ftnbj\aendnotes\aftnstart0\hyphhotz0\aftnnar\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\lytprtmet\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow1\dgvshow0
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\bdrrlswsix\nolnhtadjtbl\oldas \fet0\sectd \linex0\endnhere\sectdefaultcl {\footer \pard\plain \s19\ql \li0\ri0\widctlpar
\tqc\tx4153\tqr\tx8306\pvpara\phmrg\posxr\posy0\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\field{\*\fldinst {\cs20 PAGE  }}{\fldrslt {\cs20\lang1024\langfe1024\noproof 6}}}{\cs20 
\par }\pard \s19\ql \li0\ri360\widctlpar\tqc\tx4153\tqr\tx8306\nooverflow\faroman\rin360\lin0\itap0 {
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\lang2057\langfe1033\langnp2057 
\par }\pard\plain \s1\ql \li0\ri0\keepn\widctlpar\nooverflow\faroman\outlinelevel0\rin0\lin0\itap0 \b\fs24\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f1 XP Form Skin Component  v1.0  - Manual 
\par }\pard\plain \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\fs24\lang2057\langfe1033\langnp2057 Citex Software 2001 - }{\b\f1\fs24\cf2\lang2057\langfe1033\langnp2057 
www.CitexSoftware.btinternet.com}{\f1\lang2057\langfe1033\langnp2057 
\par }{\b\f1\fs24\lang2057\langfe1033\langnp2057                                        -}{\b\f1\fs24\cf2\lang2057\langfe1033\langnp2057  CitexSoftware@btinternet.com}{\f1\fs24\lang2057\langfe1033\langnp2057 \tab }{\f1\lang2057\langfe1033\langnp2057   
\par 
\par It is recommended that you print this text file so you can keep it for later reference while working on a project.
\par 
\par 
\par }{\b\i\f1\ul\lang2057\langfe1033\langnp2057 Contents :
\par }{\f1\lang2057\langfe1033\langnp2057 Page 1 : Properties
\par Page 2 : Events
\par Page 3 : Methods - Procedures
\par Page 4 : Methods - Procedure /Functions
\par Page 5 : Methods - Functions
\par Page 6 : Property pages(Menu Editor) + Creating a menu in code
\par 
\par 
\par }{\b\f1\ul\lang2057\langfe1033\langnp2057 Properties :}{\f1\lang2057\langfe1033\langnp2057 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 MenuBackGround}{\f1\lang2057\langfe1033\langnp2057  - (White)
\par \tab \tab     (Grey)
\par Sets the background color of menu's created using the menu editor
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 MenuGradientFill}{\f1\lang2057\langfe1033\langnp2057  - (True)
\par \tab \tab   (False)
\par Sets whether when a menu item is highlight i.e Mouse over , if a standard or gradient fill is used
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 MenuImageList }{\f1\lang2057\langfe1033\langnp2057 - 
\par Sets the path to the image list associated with the menu, one image list is used for all menu's in a project. Image lists can be created using the XPImageList Control. By default this is set to a image list which contains common icons for a application

\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 MenuPath}{\f1\lang2057\langfe1033\langnp2057  -
\par Sets the path where the menu files are held which are created using the menu editor and the .mst file which is created by the menu editor to hold the menu structure of your program
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 MenuPicture}{\f1\lang2057\langfe1033\langnp2057  \endash 
\par Sets the path of graphic displayed in the menu bar 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 MenuVisible}{\f1\lang2057\langfe1033\langnp2057  - (True)
\par \tab           (False)
\par Sets whether the menu is visible or hidden 
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 Picture}{\f1\lang2057\langfe1033\langnp2057  -
\par Sets the path of the graphic displayed in the forms titlebar left hand corner
\par 
\par 
\par 
\par 
\par 
\par 
\par }{\b\f1\ul\lang2057\langfe1033\langnp2057 Events :}{\f1\lang2057\langfe1033\langnp2057 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eMinimized}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when the user clicks the minimize button on the titlebar or when minimized is clicked in the titlebars popup menu
\par Note : The code for this event is already written if you use one of the form templates supplied
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eMaximized}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when the user clicks the maximize button on the titlebar or when maximized is clicked in the titlebars popup menu. This event is only raised if the form is not in a maximized state
\par Note : The code for this event is already written if you use one of  the form templates supplied
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eRestore}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when the user clicks the restore button on the titlebar or when restore is clicked in the titlebars popup menu. This event is only raised if the form is in a maximized state
\par Note : The code for this event is already written if you use one of  the form templates supplied
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eClose}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when the user clicks the close button on the titlebar or when close is clicked in the titlebars popup menu. 
\par Note : The code for this event is already written if you use one of  the form templates supplied
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eWhatsThis}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when the user clicks the whats this help (the question mark) button in the titlebar. 
\par Note : The whats this help button is not visble by default you have to use the pSetButtonsVisible method to display it, if it is made visible the only other button available in the titlebar is the close button.
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eFormMove}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when the user holds the left mouse button down in the title bar area or when move is clicked in the titlebars popup menu
\par Note : The code for this event is already written if you use one of  the form templates supplied
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eMenuClick}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when the user clicks an item in a menu created using the menu editor
\par 
\par Parameters :
\par MenuButton - Returns which menu  the user clicked
\par MenuItemNo - Returns the index of the menu item clicked (Note :  Separators also have a menu index)
\par MenuValue - If a menu item is a Checked or Option item it returns true/false depending on the value  of the menu item when it was clicked. If it is Standard menu item False is always returned.
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 eMenuItemHighLight}{\f1\lang2057\langfe1033\langnp2057  -
\par This event is raised when a menu is displayed and the user moves the mouse over a menu item
\par 
\par Parameters :   
\par MenuButton - Returns which  menu is being displayed 
\par MenuItemNo - Returns the index of the menu item the mouse is over (Note :  Separators also have a menu index)
\par }{\f1\ul\lang2057\langfe1033\langnp2057 
\par eMenuExit}{\f1\lang2057\langfe1033\langnp2057  \endash 
\par This event is raised when the user clicks off the menu
\par 
\par }{\b\f1\ul\lang2057\langfe1033\langnp2057 Methods :}{\f1\lang2057\langfe1033\langnp2057 
\par }{\i\f1\lang2057\langfe1033\langnp2057 Procedures}{\f1\lang2057\langfe1033\langnp2057 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 pSetButtonsEnabled}{\f1\lang2057\langfe1033\langnp2057  -
\par Sets which buttons are enabled can be used to create forms that cant be maximized, minimized etc..
\par 
\par Parameters :
\par CloseEnabled - Sets whether the Close button on the titlebar is enabled (True) /disabled (False)
\par MaxRestoreEnabled - Sets whether the Maximize/Restore button on the titlebar is enabled (True) /disabled (False)
\par MinEnabled - Sets whether the Minimize button on the titlebar is enabled (True) /disabled (False)
\par WhatsThisEnabled -Sets whether the Whats This Help button on the titlebar is enabled (True) /disabled(False)
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 pSetButtonsVisible }{\f1\lang2057\langfe1033\langnp2057 -
\par Sets which buttons are visible on the titlebar
\par 
\par Parameters :
\par CloseVisible - Sets whether the Close button on the titlebar is visible (True) /hidden (False)
\par MaxRestoreVisible - Sets whether the Maximize/Restore button on the titlebar is visible (True) /hidden (False)
\par MinVisible -  Sets whether the Minimize button on the titlebar is visible (True) /hidden (False)
\par WhatsThisVisible - Sets whether the Whats This Help button on the titlebar is visible (True) /hidden (False)
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 pSetFocus}{\f1\lang2057\langfe1033\langnp2057  -
\par Sets the focus of the form skin
\par 
\par Parameters :
\par New_Focus - Can be either HasFocus or LostFocus
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 pSetMenuItemEnabled}{\f1\lang2057\langfe1033\langnp2057  -
\par Sets a menu items enabled/disabled property
\par 
\par Parameters :
\par Button \endash  Sets the menu button you want to change a n enabled value for
\par ItemNumber \endash  Sets the menu item you want to set Enabled/Disabled
\par Value \endash  Sets whether the menu item you have selected is Enabled(True)/Disabled(False)
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 pSetMenuItemValue}{\f1\lang2057\langfe1033\langnp2057  -
\par Sets a menu items value 
\par 
\par Parameters :
\par Button \endash  Sets the menu button you want to change the value for
\par ItemNumber \endash  Sets the menu item you want to set the value for
\par Value \endash  Sets the value for the  menu item you have selected  e.g For a checked  item Checked (True)/ UnChecked(False)
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\nooverflow\faroman\outlinelevel2\rin0\lin0\itap0 \f1\fs20\ul\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
\par 
\par pCreateFolder }{\ulnone -
\par }\pard\plain \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\lang2057\langfe1033\langnp2057 Cretates a folder on the user computer can created whole directory structures
\par 
\par Parameters :
\par sPath \endash  The folder you want to create e.g \'93C:\\Citex Software\\\'94 would create a folder called Citex Software in the C:\\ drive
\par }{\lang2057\langfe1033\langnp2057 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 pShellExecute }{\f1\lang2057\langfe1033\langnp2057  -
\par Open a file, folder, website or default email program
\par 
\par Parameters :
\par sFile \endash  The path to the file you want to open
\par 
\par Examples :
\par }{\cs15\f1\ul\cf2\lang2057\langfe1033\langnp2057 \'93http://www.CitexSoftware.btinternet.com\'94}{\f1\lang2057\langfe1033\langnp2057  - To open the Citex Software website
\par }{\cs15\f1\ul\cf2\lang2057\langfe1033\langnp2057 \'93mailto:CitexSoftware@btinternet.com\'94}{\f1\lang2057\langfe1033\langnp2057  - To open Outlook and send a email 
\par }{\f1\cf2\lang2057\langfe1033\langnp2057 \'93C:\\Windows\\System\\\'94}{\f1\lang2057\langfe1033\langnp2057  - To open the Windows\\System directory
\par 
\par 
\par }{\i\f1\lang2057\langfe1033\langnp2057 Functions}{\f1\lang2057\langfe1033\langnp2057 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fMaxScreenHeight}{\f1\lang2057\langfe1033\langnp2057  - Returns the height of the form when it is maximized. This function is needed because when a VB form is set to borderless whe
n it is maximized it fills the whole screen. This function returns the correct height taking in to account the position of the user start menu. This function should be called in the eMaximize event.
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fMaxScreenWidth}{\f1\lang2057\langfe1033\langnp2057  - Returns the width of the form when it is maximized. See above text for more details
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fMaxX}{\f1\lang2057\langfe1033\langnp2057 
 - Returns the X co-ordinate of a maximized form takes into account the position of the users Start windows start menu.  This function should be called in the eMaximize event.
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fMaxY}{\f1\lang2057\langfe1033\langnp2057 
 - Returns the Y co-ordinate of a maximized form takes into account the position of the users Start windows start menu.  This function should be called in the eMaximize event.
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 
\par fMenuItemValue}{\f1\lang2057\langfe1033\langnp2057  \endash  
\par Returns the value of a menu item
\par 
\par Parameters :
\par Button \endash  Sets the menu button you want to return the value for
\par ItemNumber \endash  Sets the menu item you want to return the value for
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 
\par 
\par 
\par 
\par 
\par 
\par }\pard\plain \s18\ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \b\f1\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
Note : The folowing functions do not use the Microsoft Common Dialog Control to show the dialog boxes so there is no need to add it to your project
\par }\pard\plain \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\ul\lang2057\langfe1033\langnp2057 
\par fBrowseForFolder \endash 
\par }{\f1\lang2057\langfe1033\langnp2057 Shows the browse for folder common dialog and returns the path selected
\par 
\par Parameters :
\par HWnd \endash  The window handle of the form you want to show the dialog for e.g me.hWnd 
\par Title \endash  The title displayed in the top of the dialog
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fShowOpenSaveDialog \endash 
\par }{\f1\lang2057\langfe1033\langnp2057 Shows the open/save common dialog and returns the path selected
\par 
\par Parameters :
\par DialogTitle \endash  The title displayed at the top of the window
\par Filter \endash  The types of files that are visible in the browse window
\par \tab e.g \'93Bitmap (*.bmp) | Gif (*.gif)\'94 would show bmp and gif files
\par InitialDir \endash  Sets the start directory for the browse window
\par 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fDesktop}{\f1\lang2057\langfe1033\langnp2057  \endash 
\par Returns the path to the user desktop from the registry usefull in creating setup programs which put files on the desktop
\par }{\f1\ul\lang2057\langfe1033\langnp2057 
\par fProgramFiles}{\f1\lang2057\langfe1033\langnp2057  \endash 
\par Returns the path to the user Program Files directory from the registry 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fStartMenu}{\f1\lang2057\langfe1033\langnp2057  \endash 
\par Returns the path to the user Start Menu directory from the registry
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fSystemPath}{\f1\lang2057\langfe1033\langnp2057  \endash 
\par Returns the path to the user Windows\\System directory from the registry
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 fTempPath}{\f1\lang2057\langfe1033\langnp2057 -
\par Returns the path to the user Windows\\TEMP directory from the registry
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }{\b\f1\ul\lang2057\langfe1033\langnp2057 
\par 
\par Property Pages -}{\f1\lang2057\langfe1033\langnp2057 
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 Menu Options}{\f1\lang2057\langfe1033\langnp2057  - Sets the properties of the skin
\par 
\par }{\f1\ul\lang2057\langfe1033\langnp2057 Menu Editor }{\f1\lang2057\langfe1033\langnp2057 - Can be used to create menu's of up to 10 items with icons
\par 
\par Instructions:
\par 1)Make sure you have set a directory for the menu files to be stored in, this directory has to be distributed with your app when you compile it
\par 
\par 2)Select the menu index from the combo box -This refers to the menu button you want to edit the menu for
\par 
\par 3)Type a name for the new menu
\par 
\par 4)Enter the items you want to appear in the menu in the 10 text boxes under the heading Menu Items
\par 
\par 5)Select the type for each menu item i.e Checked , Option or Standard
\par 
\par 6)Select the default values  for each of the menu items e.g True = Checked , False = UnChecked for a Checked menu item
\par 
\par 7)Select whether you want the menu item to be enabled or disabled by default
\par 
\par 8)Type a number which specifies the image to be displayed next to the menu item leave blank for no image, this number refers to the index of an image in the select image list. Click view image list to view the current image list associated with the menu.

\par 
\par 9)Click Apply and the menu editor will create the menu files for your menu and store them in the MenuPath
\par 
\par 
\par 
\par }{\b\f1\ul\lang2057\langfe1033\langnp2057 Advanced - Creating a menu in code}{\f1\lang2057\langfe1033\langnp2057 
\par 
\par If you want to create a menu with more than 10 items in it or a menu with sub-menu\rquote s then you have to create it in a separate project an example of how to do this is included check Start - Programs \endash  Citex Software - XP GUI Toolkit 1.0 
\endash  Examples - Example Menu - Creating A Menu In Code
\par It is advised that if you want to create a menu this way you use the example as the basis of your menu.
\par See XPMenuDLL manual for information on how to create and store a menu using the XPMenuDLL.
\par 
\par More information on creating menu\rquote s using the XPMenuDLL is availabled at }{\cs15\f1\ul\cf2\lang2057\langfe1033\langnp2057 www.vbAccelerator.com}{\f1\lang2057\langfe1033\langnp2057  which has the original source for the pop-u
p menu DLL which the XPMenuDLL is based on.
\par 
\par 
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\keepn\widctlpar\nooverflow\faroman\outlinelevel1\rin0\lin0\itap0 \b\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f1 
\par Note : Microsoft, Windows and WindowsXP are }{\f1 Copyrights }{\f1 of the Microsoft Corporation}{\b0\f1  }{\f1 
\par }\pard\plain \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\lang2057\langfe1033\langnp2057            Citex Software and the XP GUI Toolkit are Copyright 2001 Citex Software
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\lang2057\langfe1033\langnp2057 
\par }\pard\plain \ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\lang2057\langfe1033\langnp2057 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }{\lang2057\langfe1033\langnp2057 
\par }}